{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/footer/footer.component.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/test.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n\t{\n    path:'',\n    component:HomeComponent\n    },\n    {\n      path:'home',\n      component:HomeComponent\n    },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'task';\n}\n","<app-header></app-header>\n<app-home></app-home>\n<!-- <router-outlet></router-outlet> -->\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\n\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { TestService } from './test.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2SearchPipeModule\n  ],\n  providers: [TestService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"header full-width\"></div>","import { Component, OnInit } from '@angular/core';\nimport { TestService } from '../test.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  registerForm: FormGroup;\n  submitted = false;\n  objdata: {};\n  editedData: {};\n  filterForm: FormGroup;\n  userId: String;\n  formTitle = \"\";\n  editedUserID: String;\n  listUser: any;\n  userRole: any = ['Artist', 'Designer', 'Art manager'];\n  newRow: boolean = false;\n  editExitingRow: boolean = false;\n  filterRole = ['All', 'Artist', 'Designer', 'Art manager'];\n  selectedFilterdRole: any;\n  filterData: any = [];\n  searchQuerry = \"\";\n\n\n  constructor(private svc: TestService, private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.svc.getAllUser().subscribe(data => {\n      this.listUser = data;\n      this.filterData = this.listUser;\n    });\n\n    this.filterForm = this.formBuilder.group({\n      filteredRole: ['', Validators.required],\n      search: ['', Validators.required],\n    });\n\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.email, Validators.required]],\n      role: ['', Validators.required],\n\n    })\n  }\n\n\n  // convenience getter for easy access to form fields\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.objdata = {\n      firstName: this.registerForm.value.firstName,\n      lastName: this.registerForm.value.lastName,\n      email: this.registerForm.value.email,\n      role: this.registerForm.value.role\n\n    }\n    this.svc.addUser(this.objdata);\n    this.svc.getAllUser().subscribe(data => {\n      this.listUser = data;\n      this.filterData = this.listUser;\n\n    });\n    if (this.registerForm.value) {\n      this.onReset();\n    }\n  }\n\n  onReset() {\n    this.submitted = false;\n    this.registerForm.reset();\n  }\n\n  changeRole(e) {\n    this.registerForm.get('role').setValue(e.target.value, {\n      onlySelf: true\n    });\n\n  }\n\n  addRow() {\n    if (this.newRow) {\n      this.newRow = false;\n    }\n    else {\n      this.newRow = true;\n      this.formTitle = \"Add New User\";\n    }\n  }\n\n  editRow() {\n    if (this.editExitingRow) {\n      this.editExitingRow = false;\n    }\n    else {\n      this.editExitingRow = true;\n\n    }\n  }\n\n\n  changeFilteredRole(e) {\n    this.filterForm.get('filteredRole').setValue(e.target.value, {\n      onlySelf: true\n    });\n    this.selectedFilterdRole = this.filterForm.value.filteredRole\n\n    if (this.selectedFilterdRole.trim() === \"All\") {\n      this.filterData = this.listUser;\n    }\n    else if (this.selectedFilterdRole.trim() === \"Artist\") {\n\n\n      this.filterData = this.listUser.filter(data => data.role === \"Artist\");\n\n    }\n    else if (this.selectedFilterdRole.trim() === \"Designer\") {\n      this.filterData = this.listUser.filter(data => data.role === \"Designer\");\n\n    }\n    else if (this.selectedFilterdRole.trim() === \"Art manager\") {\n      this.filterData = this.listUser.filter(data => data.role === \"Art manager\");\n\n    }\n\n  }\n\n\n  deleteUser(user) {\n    this.userId = user._id\n    this.svc.deleteUserbyId(this.userId);\n    this.svc.getAllUser().subscribe(data => {\n      this.listUser = data;\n      this.filterData = this.listUser;\n\n    });\n\n\n  }\n\n  editedUserId(user) {\n    this.editedUserID = user._id;\n\n  }\n\n  onSubmitEditUser() {\n    this.submitted = true;\n\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.editedData = {\n      firstName: this.registerForm.value.firstName,\n      lastName: this.registerForm.value.lastName,\n      email: this.registerForm.value.email,\n      role: this.registerForm.value.role\n\n    }\n\n    this.svc.updateUserbyId(this.editedData, this.editedUserID);\n    this.svc.getAllUser().subscribe(data => {\n      this.listUser = data;\n      this.filterData = this.listUser;\n\n    });\n    if (this.registerForm.value) {\n      this.onReset();\n    }\n  }\n\n}\n","<section class=\"full-width form-section\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <form\n        [formGroup]=\"filterForm\"\n        (ngSubmit)=\"onSubmit()\"\n        class=\"full-width\"\n      >\n        <div class=\"select-option auto-width\">\n          <span>Role</span>\n          <select\n            class=\"form-control\"\n            formControlName=\"filteredRole\"\n            (change)=\"changeFilteredRole($event)\"\n          >\n            <option *ngFor=\"let role of filterRole\">{{ role }}</option>\n          </select>\n        </div>\n        <div class=\"search-here auto-width\">\n          <div class=\"form-group\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              id=\"exampleInputSearch\"\n              placeholder=\"Search\"\n              [(ngModel)]=\"searchQuerry\"\n              formControlName=\"search\"\n            />\n          </div>\n          <button type=\"submit\" class=\"btn search-btn\">Search</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</section>\n\n<section *ngIf=\"newRow\">\n  <div class=\"card ml-5 mb-5 p-5\" style=\"width: 55rem;\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        Add New User\n      </div>\n      <div>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name:</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"firstName\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\n                  class=\"form-control\"\n                  id=\"firstName\"\n                />\n                <div\n                  *ngIf=\"submitted && f.firstName.errors\"\n                  class=\"invalid-feedback\"\n                >\n                  <div *ngIf=\"f.firstName.errors.required\">\n                    First name is required\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name:</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"lastName\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\n                  class=\"form-control\"\n                  id=\"lastName\"\n                />\n                <div\n                  *ngIf=\"submitted && f.lastName.errors\"\n                  class=\"invalid-feedback\"\n                >\n                  <div *ngIf=\"f.lastName.errors.required\">\n                    Last name is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email address:</label>\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                  class=\"form-control\"\n                  id=\"email\"\n                />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">\n                    Email must be a valid email address\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"email\">Select Role:</label>\n                <div class=\"select-option auto-width\">\n                  <select\n                    class=\"form-control\"\n                    formControlName=\"role\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\"\n                    (change)=\"changeRole($event)\"\n                  >\n                    <option>Select Role</option>\n                    <option *ngFor=\"let role of userRole\">{{ role }}</option>\n                  </select>\n                  <div\n                    *ngIf=\"submitted && f.role.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.role.errors.required\">Role is required</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"submitButton\">\n            <button class=\"btn btn-secondary btn-lg btn-block\">Submit</button>\n          </div>          \n        </form>\n      </div>\n    </div>\n  </div>\n  </section>\n \n\n\n \n<section *ngIf=\"editExitingRow\">\n  <div class=\"card ml-5 mb-5 p-5\" style=\"width: 55rem;\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        Edit Exitsting User\n      </div>\n      <div>\n        <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmitEditUser()\">\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"firstName\">First Name:</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"firstName\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\"\n                  class=\"form-control\"\n                  id=\"firstName\"\n                />\n                <div\n                  *ngIf=\"submitted && f.firstName.errors\"\n                  class=\"invalid-feedback\"\n                >\n                  <div *ngIf=\"f.firstName.errors.required\">\n                    First name is required\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"lastName\">Last Name:</label>\n                <input\n                  type=\"text\"\n                  formControlName=\"lastName\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\"\n                  class=\"form-control\"\n                  id=\"lastName\"\n                />\n                <div\n                  *ngIf=\"submitted && f.lastName.errors\"\n                  class=\"invalid-feedback\"\n                >\n                  <div *ngIf=\"f.lastName.errors.required\">\n                    Last name is required\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email address:</label>\n                <input\n                  type=\"email\"\n                  formControlName=\"email\"\n                  [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\"\n                  class=\"form-control\"\n                  id=\"email\"\n                />\n                <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                  <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                  <div *ngIf=\"f.email.errors.email\">\n                    Email must be a valid email address\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-sm-6\">\n              <div class=\"form-group\">\n                <label for=\"email\">Select Role:</label>\n                <div class=\"select-option auto-width\">\n                  <select\n                    class=\"form-control\"\n                    formControlName=\"role\"\n                    [ngClass]=\"{ 'is-invalid': submitted && f.role.errors }\"\n                    (change)=\"changeRole($event)\"\n                  >\n                    <option>Select Role</option>\n                    <option *ngFor=\"let role of userRole\">{{ role }}</option>\n                  </select>\n                  <div\n                    *ngIf=\"submitted && f.role.errors\"\n                    class=\"invalid-feedback\"\n                  >\n                    <div *ngIf=\"f.role.errors.required\">Role is required</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"submitButton\">\n            <button class=\"btn btn-secondary btn-lg btn-block\">Submit</button>\n          </div>  \n        </form>\n      </div>\n    </div>\n  </div>\n  </section>\n    \n\n\n<section class=\"full-width task-section\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"full-width table-responsive\">\n        <table class=\"table full-width\">\n          <thead>\n            <tr>\n              <th>First Name</th>\n              <th>Last Name</th>\n              <th>Email</th>\n              <th>Role</th>\n              <th>\n                <button class=\"btn btn-primary\" (click)=\"addRow()\">\n                  Add new rows\n                </button>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let user of filterData  | filter:searchQuerry\">\n              <td>{{ user.firstName }}</td>\n              <td>{{ user.lastName }}</td>\n              <td>{{ user.email }}</td>\n              <td>{{ user.role }}</td>\n              <td>\n                <a href=\"javascript:void(0)\" (click)=\"editedUserId(user)\" (click)=\"editRow()\" class=\"edit btn box-shadow1\">\n                  <i class=\"fas fa-edit\"></i>\n                </a>\n                <!-- <a href=\"javascript:void(0)\" class=\"delete btn box-shadow1\">\n                  <i class=\"far fa-trash\"></i>\n                </a> -->\n                <button (click)=\"deleteUser(user)\" class=\"delete btn box-shadow1\"><i class=\"far fa-trash\"></i></button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestService {\n  apiURL = \"http://127.0.0.1:3000\";\n\n  constructor(private http:HttpClient,) { }\n  // getData(){\n  //   return this.http.get(\"api/get-all-user\").subscribe()\n  // }\n\n  getAllUser():Observable<any>{\n    return this.http.get(this.apiURL + \"/api/get-all-user\");\n  }\n\n\n  addUser(objdata: any){\n    return this.http.post(this.apiURL +\"/api/add-user\", objdata).subscribe((res) => {\n      console.log(res);\n    })\n  }\n\n  deleteUserbyId(userId:String){\n  \n    this.http.delete(this.apiURL + \"/api/delete-user\"+\"/\"+ userId).subscribe(data => {\n      console.log(data);\n    });\n  }\n\n  updateUserbyId(editedData:any , editedUserID:String ){\n    this.http.put(this.apiURL + \"/api/edit-user\" + \"/\"+ editedUserID , editedData).subscribe(data => {\n      console.log(data);\n    })\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}